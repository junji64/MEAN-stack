{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/dashboard/dashboard.component.css","webpack:///./src/app/components/dashboard/dashboard.component.html","webpack:///./src/app/components/dashboard/dashboard.component.ts","webpack:///./src/app/components/home/home.component.css","webpack:///./src/app/components/home/home.component.html","webpack:///./src/app/components/home/home.component.ts","webpack:///./src/app/components/login/login.component.css","webpack:///./src/app/components/login/login.component.html","webpack:///./src/app/components/login/login.component.ts","webpack:///./src/app/components/navbar/navbar.component.css","webpack:///./src/app/components/navbar/navbar.component.html","webpack:///./src/app/components/navbar/navbar.component.ts","webpack:///./src/app/components/profile/profile.component.css","webpack:///./src/app/components/profile/profile.component.html","webpack:///./src/app/components/profile/profile.component.ts","webpack:///./src/app/components/register/register.component.css","webpack:///./src/app/components/register/register.component.html","webpack:///./src/app/components/register/register.component.ts","webpack:///./src/app/guards/auth.guard.ts","webpack:///./src/app/services/auth.service.ts","webpack:///./src/app/services/validate.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<app-navbar></app-navbar>\\n<div class=\\\"container\\\">\\n  <ng-flash-message></ng-flash-message>\\n  <router-outlet></router-outlet>\\n</div>\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'angular-src in MEANAuthApp';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpModule } from '@angular/http';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { AppComponent } from './app.component';\nimport { NavbarComponent } from './components/navbar/navbar.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { RegisterComponent } from './components/register/register.component';\nimport { HomeComponent } from './components/home/home.component';\nimport { DashboardComponent } from './components/dashboard/dashboard.component';\nimport { ProfileComponent } from './components/profile/profile.component';\n\nimport { ValidateService } from './services/validate.service';\nimport { AuthService } from './services/auth.service';\nimport { NgFlashMessagesModule } from 'ng-flash-messages';\nimport { AuthGuard } from './guards/auth.guard';\n\nconst appRoutes: Routes = [\n  {path:'', component: HomeComponent},\n  {path:'register', component: RegisterComponent},\n  {path:'login', component: LoginComponent},\n  {path:'dashboard', component: DashboardComponent, canActivate:[AuthGuard]},\n  {path:'profile', component: ProfileComponent, canActivate:[AuthGuard]}\n]\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavbarComponent,\n    LoginComponent,\n    RegisterComponent,\n    HomeComponent,\n    DashboardComponent,\n    ProfileComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpModule,\n    RouterModule.forRoot(appRoutes),\n    NgFlashMessagesModule\n  ],\n  providers: [ValidateService, AuthService, AuthGuard],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\"","module.exports = \"<h2 class=\\\"page-header\\\"> Dashboard </h2>\\n<p> Welcome to Your dashboard</p>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"jumbotron text-center\\\">\\n  <h1>MEAN Authentication App</h1>\\n  <p class=\\\"lead\\\">Welcome to our custom MEAN authentication application built from scratch.</p>\\n  <div>\\n    <a class=\\\"btn btn-primary\\\" [routerLink]=\\\"['/register']\\\">Register</a> \\n     <a class=\\\"btn btn-secondary\\\" [routerLink]=\\\"['/login']\\\">Login</a>\\n\\n  </div>\\n</div>\\n\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-md-4\\\">\\n    <h3>Extress Backend</h3>\\n    <p> A rock solid Node.js/Express server using Mongoose to organize models and query the database </p>\\n  </div>\\n  <div class=\\\"col-md-4\\\">\\n    <h3>Angular-CLI</h3>\\n    <p> Angular0CLI to generate components, services and more. Local dev server and easy compilation </p>\\n  </div>\\n  <div class=\\\"col-md-4\\\">\\n    <h3>JWT Tokens</h3>\\n    <p> Full featured authentication using JSON web tokens. Login and store user data </p>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<h2 class=\\\"page-header\\\">Login</h2>\\n<form (submit)=\\\"onLoginSubmit()\\\">\\n  <div class=\\\"form-group\\\">\\n    <label>Username</label>\\n    <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]='username' name=\\\"username\\\">\\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <label>password</label>\\n    <input type=\\\"password\\\" class=\\\"form-control\\\" [(ngModel)]='password' name=\\\"password\\\">\\n  </div>\\n  <input type=\\\"submit\\\" class=\\\"btn btn-primary\\\" value=\\\"Login\\\">\\n</form>\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../services/auth.service';\nimport { NgFlashMessageService } from 'ng-flash-messages';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  username: String;\n  password: String;\n\n  constructor(\n    private authService: AuthService,\n    private router: Router,\n    private flashMessage: NgFlashMessageService\n    ) { }\n\n  ngOnInit() {\n  }\n\n  onLoginSubmit() {\n    // console.log(this.username);\n    const user = {\n      username: this.username,\n      password: this.password\n    }\n\n    this.authService.authenticateUser(user).subscribe(data => {\n      if(data.success) {\n        this.authService.storeUserData(data.token, data.user);\n        this.flashMessage.showFlashMessage({\n          messages: [data.msg], \n          type: 'success', \n          timeout:3000\n        });\n        this.router.navigate(['dashboard']);\n      } else {\n        this.flashMessage.showFlashMessage({\n            messages: [data.msg], \n            type: 'danger', \n            timeout:3000\n          });\n          this.router.navigate(['login']);\n      }\n    });\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<nav class=\\\"navbar navbar-expand-md navbar-dark bg-dark\\\">\\n    <a class=\\\"navbar-brand\\\" href=\\\"#\\\">MEAN Auth App</a>\\n    <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarsExample04\\\" aria-controls=\\\"navbarsExample04\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n      <span class=\\\"navbar-toggler-icon\\\"></span>\\n    </button>\\n\\n    <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarsExample04\\\">\\n      <ul class=\\\"navbar-nav mr-auto\\\">\\n        <li class=\\\"nav-item active\\\" [routerLinkActive]=\\\"['active']\\\" [routerLinkActiveOptions]=\\\"{exact:true}\\\" >\\n          <a class=\\\"nav-link\\\" [routerLink]=\\\"['/']\\\" >Home</a>\\n        </li>\\n      </ul>\\n      <ul class=\\\"navbar-nav navbar-right\\\">\\n          <li *ngIf=\\\"authService.loggedIn()\\\" class=\\\"nav-item\\\" [routerLinkActive]=\\\"['active']\\\" >\\n              <a class=\\\"nav-link\\\" [routerLink]=\\\"['/dashboard']\\\">Dashboard</a>\\n            </li>\\n            <li *ngIf=\\\"authService.loggedIn()\\\" class=\\\"nav-item\\\" [routerLinkActive]=\\\"['active']\\\" >\\n                <a class=\\\"nav-link\\\" [routerLink]=\\\"['/profile']\\\">Profile</a>\\n              </li>\\n            <li *ngIf=\\\"!authService.loggedIn()\\\" class=\\\"nav-item\\\" [routerLinkActive]=\\\"['active']\\\">\\n              <a class=\\\"nav-link\\\"  [routerLink]=\\\"['/register']\\\">Register</a>\\n            </li>\\n            <li *ngIf=\\\"!authService.loggedIn()\\\" class=\\\"nav-item\\\" [routerLinkActive]=\\\"['active']\\\" >\\n              <a class=\\\"nav-link\\\" [routerLink]=\\\"['/login']\\\">Login</a>\\n            </li>\\n            <li class=\\\"nav-item\\\">\\n              <a class=\\\"nav-link\\\" (click)=\\\"onLogoutClick()\\\" href=\\\"#\\\">Logout</a>\\n            </li>\\n      </ul>\\n    </div>\\n  </nav>\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../services/auth.service';\nimport { NgFlashMessageService } from 'ng-flash-messages';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n  constructor(\n    private authService: AuthService,\n    private router: Router,\n    private flashMessage: NgFlashMessageService\n    ) { }\n\n  ngOnInit() {\n  }\n\n  onLogoutClick() {\n    this.authService.logout();\n    this.flashMessage.showFlashMessage({\n      messages: ['You are logged out'], \n      type: 'success', \n      timeout: 3000\n    });\n    this.router.navigate(['login']);\n    return false;\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div *ngIf=\\\"user\\\">\\n  <h2 class=\\\"page-header\\\"> {{user.name}} </h2>\\n  <ul class=\\\"list-group\\\">\\n    <li class=\\\"list-group-item\\\">Username: {{user.username}}</li>  \\n    <li class=\\\"list-group-item\\\">Email: {{user.email}}</li>  \\n  </ul>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../services/auth.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent implements OnInit {\n  user: Object;\n\n  constructor(\n    private authService: AuthService,\n    private router: Router\n  ) { }\n\n  ngOnInit() {\n    this.authService.getProfile().subscribe(profile => {\n      this.user = profile.user;\n    }, \n    err => {\n      console.log(err);\n      return false;\n    });\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<h2 class=\\\"page-header\\\"> Register</h2>\\n<form (submit)=\\\"onRegisterSubmit()\\\">\\n  <div class=\\\"form-group\\\">\\n    <label>Name</label>\\n    <input type=\\\"text\\\" [(ngModel)]=\\\"name\\\" name=\\\"name\\\" class=\\\"form-control\\\">\\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <label>Username</label>\\n    <input type=\\\"text\\\" [(ngModel)]=\\\"username\\\" name=\\\"username\\\"  class=\\\"form-control\\\">\\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <label>Email</label>\\n    <input type=\\\"text\\\" [(ngModel)]=\\\"email\\\" name=\\\"email\\\" class=\\\"form-control\\\">\\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <label>Password</label>\\n    <input type=\\\"password\\\" [(ngModel)]=\\\"password\\\" name=\\\"password\\\" class=\\\"form-control\\\">\\n  </div>\\n    <input type=\\\"submit\\\" class=\\\"btn btn=primary\\\" value=\\\"Submit\\\">\\n</form>\"","import { Component, OnInit } from '@angular/core';\nimport { ValidateService } from '../../services/validate.service';\nimport { AuthService } from '../../services/auth.service';\nimport { NgFlashMessageService } from 'ng-flash-messages';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n  name: String;\n  username: String;\n  email: String;\n  password: String;\n\n  constructor(\n    private validateService: ValidateService, \n    private flashMessage: NgFlashMessageService, \n    private authService: AuthService,\n    private router: Router\n    ) { }\n\n  ngOnInit() {\n  }\n\n  onRegisterSubmit() {\n    const user = {\n      name: this.name,\n      username: this.username,\n      email: this.email,\n      password: this.password\n    }\n\n  // Required Fields\n    if(!this.validateService.validateRegister(user)) {\n      this.flashMessage.showFlashMessage({messages: ['Please fill in all fields'], type: 'danger', timeout:2000});\n      return false;\n    }\n\n    // Validate Email\n    if(!this.validateService.validateEmail(user.email)) {\n      this.flashMessage.showFlashMessage({messages: ['Please use a valid email'], type: 'danger', timeout:2000});\n      return false;\n    }\n\n    // Register User\n    this.authService.registerUser(user).subscribe(data => {\n      if(data.success) {\n        this.flashMessage.showFlashMessage({\n          messages: ['You are now registered and can login '], \n          type: 'success', \n          timeout:2000\n        });\n        this.router.navigate(['/']);\n      } else {\n        this.flashMessage.showFlashMessage(\n          {messages: ['Something went wrong'], \n          type: 'danger', \n          timeout:3000\n        });\n        this.router.navigate(['/register']);\n      }\n    })\n  }\n\n}\n","import { Injectable } from '@angular/core';\r\nimport { Router, CanActivate } from '@angular/router';\r\nimport { AuthService } from '../services/auth.service';\r\n\r\n@Injectable()\r\nexport class AuthGuard implements CanActivate {\r\n  constructor(\r\n    private authService:AuthService, \r\n    private router:Router\r\n    ){\r\n  }\r\n\r\n   canActivate() {\r\n    if(this.authService.loggedIn()) {\r\n      return true;\r\n    } else {\r\n      this.router.navigate(['/login']);\r\n      return false;\r\n    }\r\n  }\r\n}","import { Injectable } from '@angular/core';\nimport { Http, Headers } from '@angular/http';\nimport { map } from 'rxjs/operators';\nimport { tokenNotExpired } from 'angular2-jwt';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  authToken: any;\n  user: any;\n\n  constructor(private http:Http) { }\n\n  registerUser(user) {\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    return this.http.post('http://localhost:3000/users/register', user, {headers: headers})\n      .pipe(map(res => res.json()));\n  }\n\n  authenticateUser(user) {\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    return this.http.post('http://localhost:3000/users/authenticate', user, {headers: headers})\n      .pipe(map(res => res.json()));\n  }\n\n  getProfile() {\n    let headers = new Headers();\n    this.loadToken();\n    headers.append('Authorization', this.authToken);\n    headers.append('Content-Type', 'application/json');\n    return this.http.get('http://localhost:3000/users/profile', {headers: headers})\n      .pipe(map(res => res.json()));\n  }\n\n  storeUserData(token, user) {\n    localStorage.setItem('id_token', token);\n    localStorage.setItem('user', JSON.stringify(user));\n    this.authToken = token;\n    this.user = user;\n  }\n\n  loadToken() {\n    const token = localStorage.getItem('id_token');\n    this.authToken = token;\n  }\n\n   loggedIn() {\n    return tokenNotExpired('id_token');\n   }\n\n  logout() {\n    this.authToken = null;\n    this.user = null;\n    localStorage.clear();\n  }\n}\n ","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ValidateService {\n\n  constructor() { }\n\n  validateRegister(user) {\n    if(user.name == undefined || user.email == undefined || user.username == undefined || user.password == undefined) {\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  validateEmail(email) {\n    var re = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(email);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n"],"sourceRoot":""}